apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: loki
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Kustomize
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
  name: galah-logging
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: loki
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Kustomize
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
  name: loki
  namespace: galah-logging
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: loki
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Kustomize
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
  name: loki-clusterrole
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: loki
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Kustomize
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
  name: loki-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: loki-clusterrole
subjects:
- kind: ServiceAccount
  name: loki
  namespace: galah-logging
---
apiVersion: v1
data:
  config.yaml: "auth_enabled: false\n\nserver:\n  http_listen_port: 3100\n  grpc_listen_port:
    3105\n  log_level: info\n\nmemberlist:\n  join_members:\n    - loki-memberlist.galah-logging.svc.cluster.local:7946\n\ncommon:\n
    \ compactor_address: http://loki.galah-logging.svc.cluster.local:3100\n  # TODO:
    Set to env\n#  instance_addr: 127.0.0.1\n  path_prefix: /var/loki\n\n  storage:\n
    \   s3:\n      bucketnames: loki-data,loki-ruler\n      endpoint: ${LOKI_S3_ENDPOINT:-minio.minio-store.svc:443}\n
    \     access_key_id: ${LOKI_S3_KEY_ID:-bucket}\n      secret_access_key: ${LOKI_S3_SECRET_ACCESS_KEY:-supersecret}\n
    \     insecure: ${LOKI_S3_INSECURE:-false}\n      s3forcepathstyle: true\n      http_config:\n
    \       insecure_skip_verify: true\n\n    # filesystem:\n    #   chunks_directory:
    /loki/chunks  \n    #   rules_directory: /loki/rules    \n  replication_factor:
    1\n  \n  ring:\n    instance_addr: 127.0.0.1\n    #TODO: Look at other options\n
    \   kvstore:\n      store: inmemory\n\nschema_config:\n  configs:\n    - from:
    2024-08-20\n      store: tsdb\n      object_store: filesystem\n      schema: v13\n
    \     \n      index:\n        prefix: index_\n        period: 24h\n\nstorage_config:\n
    \ tsdb_shipper:\n    active_index_directory: /var/loki/index\n    cache_location:
    /var/loki/index_cache\n    index_gateway_client:\n      server_address: \"dns+loki.galah-logging.svc.cluster.local:3105\"\n#
    \ filesystem:\n#    directory: /tmp/loki/chunks\n\n\n\n#distributor:\n#  ring:\n#
    \   instance_addr: 127.0.0.1\n#    kvstore:\n#      store: inmemory\n\nindex_gateway:\n
    \ mode: simple\n\n\ncompactor:\n  retention_enabled: true\n  retention_delete_delay:
    2h\n  delete_request_cancel_period: 24h\n  delete_request_store: s3\n  working_directory:
    /tmp/compactor\n\nbloom_gateway:\n  enabled: true\n  client:\n    addresses: \"dns+loki.galah-logging.svc.cluster.local:3105\"\n\nbloom_compactor:\n
    \ enabled: true\n  ring:\n    kvstore:\n      store: memberlist\n\n\nquery_range:\n
    \ align_queries_with_step: true\n  cache_results: true\n\nquery_scheduler:\n  max_outstanding_requests_per_tenant:
    2048\n\nfrontend:\n  max_outstanding_per_tenant: 2048\n\ningester:\n  max_chunk_age:
    8h\n  chunk_idle_period: 4h\n\n\npattern_ingester:\n  enabled: true\n\nlimits_config:\n
    \ volume_enabled: true\n\nruler:\n  #TODO: Set to env\n  alertmanager_url: ${ALERT_MANAGER_URL:-mimir.galah-monitoring.svc:9090/alertmanager}\n
    \ enable_api: true\n  storage:\n    s3:\n      bucketnames: loki-ruler\n    type:
    s3\n\nanalytics:\n  reporting_enabled: false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: loki
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Kustomize
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
  name: loki-config
  namespace: galah-logging
---
apiVersion: v1
data: {}
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: loki
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Kustomize
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
  name: loki-env-46f8b28mk5
  namespace: galah-logging
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "3100"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/component: loki
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Kustomize
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
  name: loki
  namespace: galah-logging
spec:
  ports:
  - name: http-metrics
    port: 3100
    protocol: TCP
    targetPort: http-metrics
  - appProtocol: grpc
    name: grpc
    port: 3105
  selector:
    app.kubernetes.io/component: loki
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: loki
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Kustomize
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    prometheus.io/service-monitor: "false"
  name: loki-memberlist
  namespace: galah-logging
spec:
  clusterIP: None
  ports:
  - name: tcp-gossip-ring
    port: 7946
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: loki
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki
    app.kubernetes.io/part-of: memberlist
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: loki
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Kustomize
    app.kubernetes.io/name: loki
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 3.1.1
  name: loki
  namespace: galah-logging
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Delete
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: loki
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
      app.kubernetes.io/part-of: memberlist
  serviceName: loki-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/component: loki
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki
        app.kubernetes.io/part-of: memberlist
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=all
        - -config.expand-env=true
        envFrom:
        - secretRef:
            name: loki-env-46f8b28mk5
        image: docker.io/grafana/loki:3.1.1
        imagePullPolicy: IfNotPresent
        name: loki
        ports:
        - containerPort: 3100
          name: http-metrics
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        - containerPort: 3105
          name: grpc
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
        resources:
          limits:
            cpu: 999m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki
          name: storage
      enableServiceLinks: true
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: tmp
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: loki-config
        name: config
  updateStrategy:
    rollingUpdate:
      partition: 0
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app.kubernetes.io/component: loki
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki
      name: storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: loki
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Kustomize
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
  name: loki
  namespace: galah-logging
spec:
  endpoints:
  - interval: 15s
    port: http-metrics
    relabelings:
    - action: replace
      replacement: galah-logging/loki
      sourceLabels:
      - job
      targetLabel: job
    scheme: http
  namespaceSelector:
    matchNames:
    - galah-logging
  selector:
    matchExpressions:
    - key: prometheus.io/service-monitor
      operator: NotIn
      values:
      - "false"
    matchLabels:
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
