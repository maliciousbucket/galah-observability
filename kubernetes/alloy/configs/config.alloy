logging {
	level    = "info"
	format   = "logfmt"
	write_to = [provider.self_hosted_stack.kubernetes.logs_receiver]
}

livedebugging {
	enabled = true
}

import.file "provider" {
	filename = "/etc/alloy/modules/provider"
}

otelcol.exporter.debug "default" { }

provider.self_hosted_stack "kubernetes" {
	metrics_endpoint = coalesce(env("METRICS_ENDPOINT"), "http://nginx.gateway.svc:9090/api/v1/push")
	logs_endpoint    = coalesce(env("LOGS_ENDPOINT"), "http://nginx.gateway.svc:3100/loki/api/v1/push")
	traces_endpoint  = coalesce(env("TRACES_ENDPOINT"), "http://nginx.gateway.svc:4317")
}

otelcol.exporter.loki "otlp_to_loki" {
	forward_to = [provider.self_hosted_stack.kubernetes.logs_receiver]
}

otelcol.exporter.prometheus "otlp_to_prom" {
	forward_to = [provider.self_hosted_stack.kubernetes.metrics_receiver]
}

import.file "metrics" {
	filename = "/etc/alloy/modules/kubernetes/metrics"
}

metrics.integrations_scrape "kubernetes" {
	forward_to = [provider.self_hosted_stack.kubernetes.metrics_receiver]
}

import.file "traces" {
	filename = "/etc/alloy/modules/kubernetes/traces"
}

traces.filter_health "default" {
	forward_to = [provider.self_hosted_stack.kubernetes.traces_receiver]
}

import.file "jobs" {
	filename = "/etc/alloy/modules/kubernetes/jobs"
}

jobs.log_pipeline "default" {
	forward_to = [provider.self_hosted_stack.kubernetes.logs_receiver]
}

jobs.k8s_log_pipeline "default" {
	forward_to = [jobs.log_pipeline.default.receiver]
}

jobs.k8s_logs "default" {
	forward_to = [jobs.k8s_log_pipeline.default.receiver]
}

jobs.receive_otlp_telemetry "default" {
	metrics_forward_to = [otelcol.exporter.prometheus.otlp_to_prom.input]
	logs_forward_to    = [otelcol.exporter.loki.otlp_to_loki.input]
	traces_forward_to  = [traces.filter_health.default.receiver]
}

jobs.receive_k6 "default" {
	forward_to = [provider.self_hosted_stack.kubernetes.metrics_receiver]
}

jobs.kubernetes_scrape "default" {
	forward_to = [provider.self_hosted_stack.kubernetes.metrics_receiver]
}

jobs.testbed_scrape "testbed" {
	forward_to = [provider.self_hosted_stack.kubernetes.metrics_receiver]
}

prometheus.receive_http "k6" {
  http {
    listen_address = "0.0.0.0"
    listen_port = 8081
  }
  forward_to = [provider.self_hosted_stack.kubernetes.metrics_receiver]
}
